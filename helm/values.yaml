global:
  cloudProvider:
    dockerRegistryUrl: 
    flavor: openshift
    imagePullSecretName: 
  imagePullPolicy: IfNotPresent
  tracing: {}
  metrics: {}
  environment: 'development'

  S3:
    accessKey: ''
    secretAccessKey: ''
    server: ''
    serverPort: 
    serverProto: ''
    bucket: ''
    region: ''
    style: ''
    sigVersion: 

  opala:
    enabled: false
    domain: ''
    url: ''

cloudProvider:
    dockerRegistryUrl: 
    flavor: 
    imagePullSecretName: 
imagePullPolicy: 
environment: 

image:
  repository: nginx-s3-gateway
  tag: latest

nodePort: 30030
replicaCount: 1
revisionHistoryLimit: 5 # Amount of revisions we keep

S3: 
  accessKey: ''
  secretAccessKey: ''
  server: ''
  serverPort: 
  serverProto: ''
  bucket: ''
  region: ''
  style: ''
  sigVersion: 

opala:
  enabled: false
  domain: ''
  url: ''

livenessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /health

readinessProbe:
  enabled: true
  initialDelaySeconds: 10
  timeoutSeconds: 5
  failureThreshold: 6
  path: /health

extraVolumes: {}

extraVolumeMounts: {}

sidecars: {}

podAnnotations: {}

env:
  protocol: TCP
  port: 8080
  targetPort: 8080
  debug: false
  corsEnabled: false
  nginxWorkerProcesses: 4
  allowDirectoryList: 'false'
  tracing:
    enabled: false
    url: ''
  metrics:
    enabled: false
    url: ''

resources:
  enabled: true
  value:
    limits:
      cpu: 100m
      memory: 128Mi
    requests:
      cpu: 100m
      memory: 128Mi

ingress:
  enabled: false
  path: /
  host: localhost
  cors:
    enabled: true
    origin: '*'

route:
  enabled: true
  path: /
  host: 
  timeout:
    enabled: false # defaults to 30s by openshift
    duration: 60s # supported units (us, ms, s, m, h, d)
  rewriteTarget: '/'
  tls:
    enabled: false
    termination: edge
    insecureEdgeTerminationPolicy: Redirect
    useCerts: false
    certificate: ''
    key: ''
    caCertificate: ''
  
customServerConf: "" # Example: "expires 4w;\n"
customLocationConf: "" # Example: "proxy_no_cache 1;\n"

cache:
  maxSize: # Example: 10g
  inactive: # Example: 60m
  validOk: # Example: 1h
  validNotFound: # Example: 1m
  validForbidden: # Example: 30s

redis:
  enabled: false
  host: ''
  port: 
  sslEnabled: false
  skipCache: 0 # 0 for false. If it contains any other value, the service will skip cache in redis
  cacheExpirationTime: 10000
  connectionTimeout: 1000
  sendTimeout: 1000
  readTimeout: 1000
  maxIdleTimeout: 2000
  poolSize: 1000
  authentication:
    requirePassword: false
    password: ''
    username: ''
  prefix:
    enabled: false
    value: ''
{{- if .Values.enabled -}}
{{- $releaseName := .Release.Name -}}
{{- $chartName := include "nginx-s3-gateway.name" . -}}
{{- $cloudProviderFlavor := include "nginx-s3-gateway.cloudProviderFlavor" . -}}
{{- $cloudProviderDockerRegistryUrl := include "nginx-s3-gateway.cloudProviderDockerRegistryUrl" . -}}
{{- $cloudProviderImagePullSecretName := include "nginx-s3-gateway.cloudProviderImagePullSecretName" . -}}
{{- $tag := include "nginx-s3-gateway.tag" . -}}
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ $releaseName }}-deployment
  labels:
    app: {{ $chartName }}
    component: {{ $chartName }}
    environment: {{ include "nginx-s3-gateway.environment" . }}
    release: {{ $releaseName }}
    {{- include "nginx-s3-gateway.labels" . | nindent 4 }}
  annotations:
    collectord.io/index: {{ quote .Values.splunkIndex }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ $chartName }}
      release: {{ $releaseName }}
      run: {{ $releaseName }}-{{ $chartName }}
      {{- include "nginx-s3-gateway.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: {{ $chartName }}
        release: {{ $releaseName }}
        run: {{ $releaseName }}-{{ $chartName }}
        {{- include "nginx-s3-gateway.selectorLabels" . | nindent 8 }}
    spec:
      {{- if $cloudProviderImagePullSecretName }}
      imagePullSecrets:
        - name: {{ $cloudProviderImagePullSecretName | quote }}
      {{- end }}
      volumes:
        - name: nginx-custom-conf
          configMap:
            name: {{ .Release.Name }}-custom
        {{- if .Values.logsFilebeat.enabled }}
        - name: logs
          emptyDir: {}
        - name: config
          configMap:
            name: filebeat-config
        {{- end }}
      initContainers:
        - name: set-permissions
          image: busybox
          securityContext:
            runAsUser: 101
            runAsGroup: 101
            fsGroup: 101
          # command: ["chmod", "+x", "/docker-entrypoint.d/21-envsubst-on-nginx-conf.sh"]
          volumeMounts:
            - name: nginx-custom-conf
              mountPath: /docker-entrypoint.d/21-envsubst-on-nginx-conf.sh
              subPath: 21-envsubst-on-nginx-conf.sh
              readOnly: false
      containers:
        - name: {{ $releaseName }}-deployment
          {{- with .Values.image }}
          image: {{ $cloudProviderDockerRegistryUrl }}{{ .repository }}:{{ $tag }}
          {{- end }}
          # For debugging uncomment the following lines
          # command:
          #   - sleep
          #   - infinity
          volumeMounts:
            - name: nginx-custom-conf
              mountPath: /docker-entrypoint.d/21-envsubst-on-nginx-conf.sh
              subPath: 21-envsubst-on-nginx-conf.sh
            - name: nginx-custom-conf
              mountPath: /etc/nginx/auth.js
              subPath: auth.js
            - name: nginx-custom-conf
              mountPath: /etc/nginx/log_format.conf
              subPath: log_format.conf
            - name: nginx-custom-conf
              mountPath: /etc/nginx/templates/default.conf.template
              subPath: default.conf.template 
            - name: nginx-custom-conf
              mountPath: /etc/nginx/nginx.conf.template
              subPath: nginx.conf.template
            {{- if .Values.s3.customServerConf }}
            - name: nginx-custom-conf
              mountPath: /etc/nginx/templates/gateway/s3_server.conf.template
              subPath: s3_server.conf.template
            {{- end }}
            {{- if .Values.s3.customLocationConf }}
            - name: nginx-custom-conf
              mountPath: /etc/nginx/templates/gateway/s3_location.conf.template
              subPath: s3_location.conf.template
            {{- end }}
            {{- if .Values.logsFilebeat.enabled }}
            - name: logs
              mountPath: {{ .Values.logsFilebeat.mountPath }}
            {{- end }}
          ports:
            - containerPort: {{ .Values.env.targetPort }}
          envFrom:
            - configMapRef:
                name: {{ .Release.Name }}-configmap
          livenessProbe:
            httpGet:
              path: /health
              port: {{ .Values.env.targetPort }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
            periodSeconds: 5
          readinessProbe:
            httpGet:
              path: /health
              port: {{ .Values.env.targetPort }}
            initialDelaySeconds: {{ .Values.initialDelaySeconds }}
          {{- if .Values.resources.enabled }}
          resources:
            {{- toYaml .Values.resources.value | nindent 12 }}
          {{- end }}
        {{- if .Values.logsFilebeat.enabled }}
        - name: filebeat
          image: {{ .Values.logsFilebeat.filebeatImage }}
          args: [ "-c", "/etc/filebeat.yml", "-e" ]
          volumeMounts:
            - name: logs
              mountPath: {{ .Values.logsFilebeat.mountPath }}
            - name: config
              mountPath: /etc/filebeat.yml
              subPath: filebeat.yml
        {{- end }}
{{- end }}

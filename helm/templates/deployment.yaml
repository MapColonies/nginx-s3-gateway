apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ .Release.Name }}-{{ .Chart.Name }}-deployment
{{- with .Values.annotations }}
  annotations:
{{ toYaml . | indent 4 }}
{{- end }}
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      podName: {{ .Release.Name }}-{{ .Chart.Name }}-pod
  template:
    metadata:
      labels:
        podName: {{ .Release.Name }}-{{ .Chart.Name }}-pod
      annotations:
      {{- range $key, $val := .Values.deployment.pod.annotations }}
        {{ $key }}: {{ tpl $val $ | quote }}
      {{- end }}
    spec:
      volumes:
        {{- if .Values.authentication.opa.enabled }}
        - name: opa-policy
          secret:
            secretName: {{ .Release.Name }}-{{ .Chart.Name }}-opa
        - name: proxy-config
          configMap:
            name: {{ .Release.Name }}-{{ .Chart.Name }}-envoy
        - name: jwt-public-keys
          secret:
            secretName: {{ .Values.authentication.jwtPublicKetSecretName }}
        {{- end }}
      containers:
        - name: {{ .Release.Name }}-{{ .Chart.Name }}-container
          image: "{{ .Values.image }}:{{ .Values.imageTag }}"
          ports:
            - containerPort: {{ .Values.ports.nginx.targetPort }}
          env:
          - name: S3_BUCKET_NAME
            value: {{ tpl .Values.s3.bucketName . | quote }}
          - name: S3_ACCESS_KEY_ID
            value: {{ tpl .Values.s3.accessKeyId . | quote }}
          - name: S3_SECRET_KEY
            value: {{ tpl .Values.s3.secretKey . | quote }}
          - name: S3_SERVER
            value: {{ tpl .Values.s3.server . | quote }}
          - name: S3_SERVER_PORT
            value: {{ tpl .Values.s3.serverPort . | quote }}
          - name: S3_SERVER_PROTO
            value: {{ tpl .Values.s3.serverProto . | quote }}
          - name: S3_REGION
            value: {{ tpl .Values.s3.region . | quote }}
          - name: S3_STYLE
            value: {{ tpl .Values.s3.style . | quote }}
          - name: S3_DEBUG
            value: {{ tpl .Values.s3.debug . | quote }}
          - name: AWS_SIGS_VERSION
            value: {{ tpl .Values.aws.sigsVersion . | quote }}
          - name: ALLOW_DIRECTORY_LIST
            value: {{ tpl .Values.global.allowDirectoryList . | quote }}
          - name: HEADER_TOKEN
            value: {{ tpl .Values.authentication.opa.customHeaderName . | quote }}
        {{- if .Values.authentication.opa.enabled }}
        - name: envoy
          image: "{{ .Values.envoy.image }}:{{ .Values.envoy.imageTag }}"
          volumeMounts:
          - readOnly: true
            mountPath: /config
            name: proxy-config
          - name: jwt-public-keys
            readOnly: true
            mountPath: /keys/mapColonies.jwks
            subPath: mapColonies.jwks
          args:
          - "envoy"
          - "--config-path"
          - "/config/envoy.yaml"
          ports:
            - name: http
              containerPort: {{ .Values.envoy.port }}
              protocol: TCP
            - name: admin
              containerPort: {{ .Values.envoy.port }}
              protocol: TCP
        - name: opa
          image: "{{ .Values.opa.image }}:{{ .Values.opa.imageTag }}"
          volumeMounts:
          - readOnly: true
            mountPath: /policy
            name: opa-policy
          args:
          - "run"
          - "--server"
          - "--addr=0.0.0.0:8181"
          - "--diagnostic-addr=0.0.0.0:8282"
          - "--set=plugins.envoy_ext_authz_grpc.add=:{{ .Values.opa.port }}"
          - "--set=plugins.envoy_ext_authz_grpc.path=envoy/authz/allow"
          - "--set=decision_logs.console=true"
          - "/policy/policy.rego"
          # livenessProbe:
          #   httpGet:
          #     path: /health?plugins=true
          #     port: 8282
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
          # readinessProbe:
          #   httpGet:
          #     path: /health?plugins=true
          #     port: 8282
          #   initialDelaySeconds: 5
          #   periodSeconds: 5
        {{- end }}
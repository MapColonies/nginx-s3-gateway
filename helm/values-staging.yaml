global:
  cloudProvider: {}
  tracing: {}
  metrics: {}
  environment: {}
  allowDirectoryList: false

annotations:
  collectord.io/index: SPLUNK_INDEX
  collectord.io/logs-output: splunk
  collectord.io/procstats-output: devnull
  collectord.io/netstats-output: devnull
  collectord.io/nettable-output: devnull
  collectord.io/stats-output: devnull

image:
  repository: heli-test
  tag: v1.1.7

enabled: true
environment: staging
initialDelaySeconds: 10
nodePort: 30030
replicaCount: 1
cloudProvider:
  dockerRegistryUrl: acrarolibotnonprod.azurecr.io
  imagePullSecretName: acr-registry
  flavor: openshift

env:
  protocol: TCP
  port: 80
  targetPort: 8080
  tracing:
    enabled: false
    url: http://localhost:55681/v1/trace
  metrics:
    enabled: false
    url: http://localhost:55681/v1/metrics

resources:
  enabled: true
  value:
    limits:
      cpu: 200m
      memory: 200Mi
    requests:
      cpu: 50m
      memory: 200Mi

ingress:
  enabled: false
  type: nginx-kubernetes # supported values: 'nginx-org' | 'nginx-kubernetes'
  host:
  path: /

route:
  enabled: true
  https: true
  host:
  path: /
  annotations:
    haproxy.router.openshift.io/rewrite-target: /
  useCert: false

s3:
  bucketName: 3dtilesint
  accessKeyId: vector
  secretAccessKey: vectorPassword
  server: 10.8.0.9
  serverPort: 9000
  serverProto: http
  region: us-east-1
  style: path
  debug: true
  corsEnabled: true
  nginxWorkerProcesses: 4
  cacheMaxSize: 10g
  cacheInactive: 60m
  cacheValidOk: 1h
  cacheValidNotfound: 1m
  cacheValidForbidden: 30s
  # customServerConf:
  # customLocationConf:
  # sigsVersion: 4
  # allowDirectoryList: false
  corsConf: "set $request_cors \"${request_method}_${CORS_ENABLED}\";\n\nif ($request_cors = \"OPTIONS_1\") {\n    add_header 'Access-Control-Allow-Origin' '${CORS_ALLOWED_ORIGIN}';\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS';\n    #\n    # Custom headers and headers various browsers *should* be OK with but aren't\n    #\n    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range';\n    #\n    # Tell client that this pre-flight info is valid for 20 days\n    #\n    add_header 'Access-Control-Max-Age' 1728000;\n    add_header 'Content-Type' 'text/plain; charset=utf-8';\n    add_header 'Content-Length' 0;\n    return 204;\n}\n\nif ($request_cors = \"GET_1\") {\n    add_header 'Access-Control-Allow-Origin' '${CORS_ALLOWED_ORIGIN}' always;\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;\n    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;\n    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;\n    add_header 'Cross-Origin-Resource-Policy' 'cross-origin' always;         \n    add_header 'Cross-Origin-Embedder-Policy' 'same-origin' always;         \n    add_header 'Cross-Origin-Opener-Policy' 'cross-origin' always;\n}\n\nif ($request_cors = \"HEAD_1\") {\n    add_header 'Access-Control-Allow-Origin' '${CORS_ALLOWED_ORIGIN}' always;\n    add_header 'Access-Control-Allow-Methods' 'GET, POST, OPTIONS' always;\n    add_header 'Access-Control-Allow-Headers' 'DNT,User-Agent,X-Requested-With,If-Modified-Since,Cache-Control,Content-Type,Range' always;\n    add_header 'Access-Control-Expose-Headers' 'Content-Length,Content-Range' always;\n}"

aws:
  sigsVersion: 4

authentication:
  jwtPublicKeySecretName: map-colonies-jwks
  opa:
    enabled: true
    customHeaderName: x-api-key

opa:
  image: openpolicyagent/opa
  imageTag: 0.29.4-envoy-3
  port: 9191
  resources:
    enabled: true
    value:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 200Mi

envoy:
  image: envoyproxy/envoy
  imageTag: v1.20.7
  port: 6565
  maxRequestBytes: 8192
  requestedDomain: 3d
  resources:
    enabled: true
    value:
      limits:
        cpu: 200m
        memory: 200Mi
      requests:
        cpu: 50m
        memory: 200Mi

logsFilebeat:
  enabled: false
  filebeatImage: docker.elastic.co/beats/filebeat:7.12.1
  mountPath: /var/log/nginx
